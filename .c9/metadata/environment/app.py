{"filter":false,"title":"app.py","tooltip":"/app.py","undoManager":{"mark":10,"position":10,"stack":[[{"start":{"row":23,"column":34},"end":{"row":24,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":24,"column":0},"end":{"row":24,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":24,"column":0},"end":{"row":24,"column":4},"action":"remove","lines":["    "],"id":3}],[{"start":{"row":24,"column":0},"end":{"row":25,"column":0},"action":"insert","lines":["",""],"id":4}],[{"start":{"row":25,"column":0},"end":{"row":75,"column":69},"action":"insert","lines":["@socketio.on('first_client_message')","","def received_Message(data):","    print (\"Got an event for new message with data: \"+ str(data))","    # server_received_name = data['user_name']","    grabMessage = data['user_message']","    ","    ","    # Checking response for the bot.","    if grabMessage[:2] == \"!!\":","        ","        received_Message= Bot(googleName, received_Message)[0]","        received_Name = Bot(googleName, received_Message)[1]","        # server_received_imageurl = \"/static/images/chatbot.png\"","        ","    ","    # Insert data to the database","    # print(\"Server received name: \", server_received_name);","    # print(\"Server received message: \", server_received_message);","    # print(\"Server received imageurl:\", server_received_imageurl)","    ","    message = models.Message(googleName, received_Message, googleImage)","    models.db.session.add(message)","    models.db.session.commit()","    ","    print(\"Record inserted successfully\")","    ","    # Retrieving the data from database","    database_messages = models.Message.query.all()","    display_list = []","    print(\"Stored Messages:\", database_messages)","    ","    for i in database_messages:","        ","        name = s.user_name","        message = s.user_message","        image = s.user_image","        ","        # ********","        url = isURL(message)[0]","        non_url = isURL(message)[1]","        # ********","        ","        # chat_list = [name, message, image]","        chat_list = [name, url, non_url, image]","        new_list.append(chat_list)","        ","    print(\"New List: \", display_list)","","    # *** Lists of username and message sent from server to every client ***","    socketio.emit('push to server', {'database_list': display_list});"],"id":5}],[{"start":{"row":7,"column":21},"end":{"row":8,"column":0},"action":"insert","lines":["",""],"id":6}],[{"start":{"row":8,"column":0},"end":{"row":9,"column":25},"action":"insert","lines":["from ChatBot import Bot","from ValidateUrl import *"],"id":7}],[{"start":{"row":8,"column":0},"end":{"row":8,"column":23},"action":"remove","lines":["from ChatBot import Bot"],"id":8},{"start":{"row":7,"column":21},"end":{"row":8,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":39,"column":8},"end":{"row":39,"column":65},"action":"remove","lines":["# server_received_imageurl = \"/static/images/chatbot.png\""],"id":9}],[{"start":{"row":39,"column":0},"end":{"row":46,"column":4},"action":"remove","lines":["        ","        ","    ","    # Insert data to the database","    # print(\"Server received name: \", server_received_name);","    # print(\"Server received message: \", server_received_message);","    # print(\"Server received imageurl:\", server_received_imageurl)","    "],"id":10}],[{"start":{"row":58,"column":14},"end":{"row":58,"column":19},"action":"remove","lines":["isURL"],"id":11},{"start":{"row":58,"column":14},"end":{"row":58,"column":25},"action":"insert","lines":["validateUrl"]}],[{"start":{"row":59,"column":18},"end":{"row":59,"column":23},"action":"remove","lines":["isURL"],"id":12},{"start":{"row":59,"column":18},"end":{"row":59,"column":29},"action":"insert","lines":["validateUrl"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":22,"column":26},"end":{"row":22,"column":26},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":73,"state":"start","mode":"ace/mode/python"}},"timestamp":1583562288752,"hash":"c574d921196a91fee2e8fec228be3d4c3cfa81a0"}